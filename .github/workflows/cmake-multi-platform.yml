name: CMake on Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        build_type: [Release]
        c_compiler: [cl]
        cpp_compiler: [cl]

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}

    - name: Install OpenCppCoverage
      run: |
        choco install OpenCppCoverage
        echo "C:\Program Files\OpenCppCoverage" >> $env:GITHUB_PATH

    - name: Generate Coverage Report
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      shell: cmd
      run: | 
        tree /F
        OpenCppCoverage --export_type cobertura:coverage.xml --modules "*.exe" --cover_children -- ctest --build-config Release --output-on-failure"


    - name: Upload Report to Codecov
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        files: coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
